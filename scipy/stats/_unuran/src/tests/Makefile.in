# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = t_x_gen$(EXEEXT) t_unur_tests$(EXEEXT) \
	t_unur_error$(EXEEXT) t_urng$(EXEEXT) t_distr$(EXEEXT) \
	t_distr_cemp$(EXEEXT) t_distr_cont$(EXEEXT) \
	t_distr_corder$(EXEEXT) t_distr_cvec$(EXEEXT) \
	t_distr_condi$(EXEEXT) t_distr_cvemp$(EXEEXT) \
	t_distr_cxtrans$(EXEEXT) t_distr_discr$(EXEEXT) \
	t_distr_matr$(EXEEXT) t_auto$(EXEEXT) t_arou$(EXEEXT) \
	t_ars$(EXEEXT) t_cext$(EXEEXT) t_cstd$(EXEEXT) t_dari$(EXEEXT) \
	t_dau$(EXEEXT) t_dext$(EXEEXT) t_dgt$(EXEEXT) t_dsrou$(EXEEXT) \
	t_dss$(EXEEXT) t_dstd$(EXEEXT) t_empk$(EXEEXT) t_empl$(EXEEXT) \
	t_gibbs$(EXEEXT) t_hinv$(EXEEXT) t_hist$(EXEEXT) \
	t_hitro$(EXEEXT) t_hrb$(EXEEXT) t_hrd$(EXEEXT) t_hri$(EXEEXT) \
	t_itdr$(EXEEXT) t_mcorr$(EXEEXT) t_mixt$(EXEEXT) \
	t_mvstd$(EXEEXT) t_mvtdr$(EXEEXT) t_ninv$(EXEEXT) \
	t_norta$(EXEEXT) t_nrou$(EXEEXT) t_pinv$(EXEEXT) \
	t_srou$(EXEEXT) t_ssr$(EXEEXT) t_tabl$(EXEEXT) t_tdr$(EXEEXT) \
	t_tdr_gw$(EXEEXT) t_tdr_ps$(EXEEXT) t_tdr_ia$(EXEEXT) \
	t_unif$(EXEEXT) t_utdr$(EXEEXT) t_vempk$(EXEEXT) \
	t_vnrou$(EXEEXT) t_stringparser$(EXEEXT) t_info$(EXEEXT) \
	t_util_matrix$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2)
@HAVE_MATHEMATICA_FALSE@test_StdDistr_DEPENDENCIES =  \
@HAVE_MATHEMATICA_FALSE@	libtestroutines.la \
@HAVE_MATHEMATICA_FALSE@	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
@HAVE_MATHEMATICA_FALSE@	$(top_builddir)/src/libunuran.la
@HAVE_MATHEMATICA_FALSE@test_functionparser_DEPENDENCIES =  \
@HAVE_MATHEMATICA_FALSE@	libtestroutines.la \
@HAVE_MATHEMATICA_FALSE@	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
@HAVE_MATHEMATICA_FALSE@	$(top_builddir)/src/libunuran.la
subdir = tests
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libtestroutines_la_LIBADD =
am_libtestroutines_la_OBJECTS = testroutines.lo testcounter.lo
libtestroutines_la_OBJECTS = $(am_libtestroutines_la_OBJECTS)
@ENABLE_DEPRECATED_TRUE@am__EXEEXT_1 = t_deprecated_vmt$(EXEEXT) \
@ENABLE_DEPRECATED_TRUE@	t_deprecated_tdrgw$(EXEEXT)
@HAVE_MATHEMATICA_TRUE@am__EXEEXT_2 = test_StdDistr$(EXEEXT) \
@HAVE_MATHEMATICA_TRUE@	test_functionparser$(EXEEXT)
t_arou_SOURCES = t_arou.c
t_arou_OBJECTS = t_arou.$(OBJEXT)
t_arou_LDADD = $(LDADD)
t_arou_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_ars_SOURCES = t_ars.c
t_ars_OBJECTS = t_ars.$(OBJEXT)
t_ars_LDADD = $(LDADD)
t_ars_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_auto_SOURCES = t_auto.c
t_auto_OBJECTS = t_auto.$(OBJEXT)
t_auto_LDADD = $(LDADD)
t_auto_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_cext_SOURCES = t_cext.c
t_cext_OBJECTS = t_cext.$(OBJEXT)
t_cext_LDADD = $(LDADD)
t_cext_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_cstd_SOURCES = t_cstd.c
t_cstd_OBJECTS = t_cstd.$(OBJEXT)
t_cstd_LDADD = $(LDADD)
t_cstd_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dari_SOURCES = t_dari.c
t_dari_OBJECTS = t_dari.$(OBJEXT)
t_dari_LDADD = $(LDADD)
t_dari_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dau_SOURCES = t_dau.c
t_dau_OBJECTS = t_dau.$(OBJEXT)
t_dau_LDADD = $(LDADD)
t_dau_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_deprecated_tdrgw_SOURCES = t_deprecated_tdrgw.c
t_deprecated_tdrgw_OBJECTS = t_deprecated_tdrgw.$(OBJEXT)
t_deprecated_tdrgw_LDADD = $(LDADD)
t_deprecated_tdrgw_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_deprecated_vmt_SOURCES = t_deprecated_vmt.c
t_deprecated_vmt_OBJECTS = t_deprecated_vmt.$(OBJEXT)
t_deprecated_vmt_LDADD = $(LDADD)
t_deprecated_vmt_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dext_SOURCES = t_dext.c
t_dext_OBJECTS = t_dext.$(OBJEXT)
t_dext_LDADD = $(LDADD)
t_dext_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dgt_SOURCES = t_dgt.c
t_dgt_OBJECTS = t_dgt.$(OBJEXT)
t_dgt_LDADD = $(LDADD)
t_dgt_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_SOURCES = t_distr.c
t_distr_OBJECTS = t_distr.$(OBJEXT)
t_distr_LDADD = $(LDADD)
t_distr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_cemp_SOURCES = t_distr_cemp.c
t_distr_cemp_OBJECTS = t_distr_cemp.$(OBJEXT)
t_distr_cemp_LDADD = $(LDADD)
t_distr_cemp_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_condi_SOURCES = t_distr_condi.c
t_distr_condi_OBJECTS = t_distr_condi.$(OBJEXT)
t_distr_condi_LDADD = $(LDADD)
t_distr_condi_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_cont_SOURCES = t_distr_cont.c
t_distr_cont_OBJECTS = t_distr_cont.$(OBJEXT)
t_distr_cont_LDADD = $(LDADD)
t_distr_cont_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_corder_SOURCES = t_distr_corder.c
t_distr_corder_OBJECTS = t_distr_corder.$(OBJEXT)
t_distr_corder_LDADD = $(LDADD)
t_distr_corder_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_cvec_SOURCES = t_distr_cvec.c
t_distr_cvec_OBJECTS = t_distr_cvec.$(OBJEXT)
t_distr_cvec_LDADD = $(LDADD)
t_distr_cvec_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_cvemp_SOURCES = t_distr_cvemp.c
t_distr_cvemp_OBJECTS = t_distr_cvemp.$(OBJEXT)
t_distr_cvemp_LDADD = $(LDADD)
t_distr_cvemp_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_cxtrans_SOURCES = t_distr_cxtrans.c
t_distr_cxtrans_OBJECTS = t_distr_cxtrans.$(OBJEXT)
t_distr_cxtrans_LDADD = $(LDADD)
t_distr_cxtrans_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_discr_SOURCES = t_distr_discr.c
t_distr_discr_OBJECTS = t_distr_discr.$(OBJEXT)
t_distr_discr_LDADD = $(LDADD)
t_distr_discr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_matr_SOURCES = t_distr_matr.c
t_distr_matr_OBJECTS = t_distr_matr.$(OBJEXT)
t_distr_matr_LDADD = $(LDADD)
t_distr_matr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dsrou_SOURCES = t_dsrou.c
t_dsrou_OBJECTS = t_dsrou.$(OBJEXT)
t_dsrou_LDADD = $(LDADD)
t_dsrou_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dss_SOURCES = t_dss.c
t_dss_OBJECTS = t_dss.$(OBJEXT)
t_dss_LDADD = $(LDADD)
t_dss_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dstd_SOURCES = t_dstd.c
t_dstd_OBJECTS = t_dstd.$(OBJEXT)
t_dstd_LDADD = $(LDADD)
t_dstd_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_empk_SOURCES = t_empk.c
t_empk_OBJECTS = t_empk.$(OBJEXT)
t_empk_LDADD = $(LDADD)
t_empk_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_empl_SOURCES = t_empl.c
t_empl_OBJECTS = t_empl.$(OBJEXT)
t_empl_LDADD = $(LDADD)
t_empl_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_gibbs_SOURCES = t_gibbs.c
t_gibbs_OBJECTS = t_gibbs.$(OBJEXT)
t_gibbs_LDADD = $(LDADD)
t_gibbs_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hinv_SOURCES = t_hinv.c
t_hinv_OBJECTS = t_hinv.$(OBJEXT)
t_hinv_LDADD = $(LDADD)
t_hinv_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hist_SOURCES = t_hist.c
t_hist_OBJECTS = t_hist.$(OBJEXT)
t_hist_LDADD = $(LDADD)
t_hist_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hitro_SOURCES = t_hitro.c
t_hitro_OBJECTS = t_hitro.$(OBJEXT)
t_hitro_LDADD = $(LDADD)
t_hitro_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hrb_SOURCES = t_hrb.c
t_hrb_OBJECTS = t_hrb.$(OBJEXT)
t_hrb_LDADD = $(LDADD)
t_hrb_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hrd_SOURCES = t_hrd.c
t_hrd_OBJECTS = t_hrd.$(OBJEXT)
t_hrd_LDADD = $(LDADD)
t_hrd_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hri_SOURCES = t_hri.c
t_hri_OBJECTS = t_hri.$(OBJEXT)
t_hri_LDADD = $(LDADD)
t_hri_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_info_SOURCES = t_info.c
t_info_OBJECTS = t_info.$(OBJEXT)
t_info_LDADD = $(LDADD)
t_info_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_itdr_SOURCES = t_itdr.c
t_itdr_OBJECTS = t_itdr.$(OBJEXT)
t_itdr_LDADD = $(LDADD)
t_itdr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_mcorr_SOURCES = t_mcorr.c
t_mcorr_OBJECTS = t_mcorr.$(OBJEXT)
t_mcorr_LDADD = $(LDADD)
t_mcorr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_mixt_SOURCES = t_mixt.c
t_mixt_OBJECTS = t_mixt.$(OBJEXT)
t_mixt_LDADD = $(LDADD)
t_mixt_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_mvstd_SOURCES = t_mvstd.c
t_mvstd_OBJECTS = t_mvstd.$(OBJEXT)
t_mvstd_LDADD = $(LDADD)
t_mvstd_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_mvtdr_SOURCES = t_mvtdr.c
t_mvtdr_OBJECTS = t_mvtdr.$(OBJEXT)
t_mvtdr_LDADD = $(LDADD)
t_mvtdr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_ninv_SOURCES = t_ninv.c
t_ninv_OBJECTS = t_ninv.$(OBJEXT)
t_ninv_LDADD = $(LDADD)
t_ninv_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_norta_SOURCES = t_norta.c
t_norta_OBJECTS = t_norta.$(OBJEXT)
t_norta_LDADD = $(LDADD)
t_norta_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_nrou_SOURCES = t_nrou.c
t_nrou_OBJECTS = t_nrou.$(OBJEXT)
t_nrou_LDADD = $(LDADD)
t_nrou_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_pinv_SOURCES = t_pinv.c
t_pinv_OBJECTS = t_pinv.$(OBJEXT)
t_pinv_LDADD = $(LDADD)
t_pinv_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_srou_SOURCES = t_srou.c
t_srou_OBJECTS = t_srou.$(OBJEXT)
t_srou_LDADD = $(LDADD)
t_srou_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_ssr_SOURCES = t_ssr.c
t_ssr_OBJECTS = t_ssr.$(OBJEXT)
t_ssr_LDADD = $(LDADD)
t_ssr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_stringparser_SOURCES = t_stringparser.c
t_stringparser_OBJECTS = t_stringparser.$(OBJEXT)
t_stringparser_LDADD = $(LDADD)
t_stringparser_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_tabl_SOURCES = t_tabl.c
t_tabl_OBJECTS = t_tabl.$(OBJEXT)
t_tabl_LDADD = $(LDADD)
t_tabl_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_tdr_SOURCES = t_tdr.c
t_tdr_OBJECTS = t_tdr.$(OBJEXT)
t_tdr_LDADD = $(LDADD)
t_tdr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_tdr_gw_SOURCES = t_tdr_gw.c
t_tdr_gw_OBJECTS = t_tdr_gw.$(OBJEXT)
t_tdr_gw_LDADD = $(LDADD)
t_tdr_gw_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_tdr_ia_SOURCES = t_tdr_ia.c
t_tdr_ia_OBJECTS = t_tdr_ia.$(OBJEXT)
t_tdr_ia_LDADD = $(LDADD)
t_tdr_ia_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_tdr_ps_SOURCES = t_tdr_ps.c
t_tdr_ps_OBJECTS = t_tdr_ps.$(OBJEXT)
t_tdr_ps_LDADD = $(LDADD)
t_tdr_ps_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_unif_SOURCES = t_unif.c
t_unif_OBJECTS = t_unif.$(OBJEXT)
t_unif_LDADD = $(LDADD)
t_unif_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_unur_error_SOURCES = t_unur_error.c
t_unur_error_OBJECTS = t_unur_error.$(OBJEXT)
t_unur_error_LDADD = $(LDADD)
t_unur_error_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_unur_tests_SOURCES = t_unur_tests.c
t_unur_tests_OBJECTS = t_unur_tests.$(OBJEXT)
t_unur_tests_LDADD = $(LDADD)
t_unur_tests_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_urng_SOURCES = t_urng.c
t_urng_OBJECTS = t_urng.$(OBJEXT)
t_urng_LDADD = $(LDADD)
t_urng_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_utdr_SOURCES = t_utdr.c
t_utdr_OBJECTS = t_utdr.$(OBJEXT)
t_utdr_LDADD = $(LDADD)
t_utdr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_util_matrix_SOURCES = t_util_matrix.c
t_util_matrix_OBJECTS = t_util_matrix.$(OBJEXT)
t_util_matrix_LDADD = $(LDADD)
t_util_matrix_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_vempk_SOURCES = t_vempk.c
t_vempk_OBJECTS = t_vempk.$(OBJEXT)
t_vempk_LDADD = $(LDADD)
t_vempk_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_vnrou_SOURCES = t_vnrou.c
t_vnrou_OBJECTS = t_vnrou.$(OBJEXT)
t_vnrou_LDADD = $(LDADD)
t_vnrou_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_x_gen_SOURCES = t_x_gen.c
t_x_gen_OBJECTS = t_x_gen.$(OBJEXT)
t_x_gen_LDADD = $(LDADD)
t_x_gen_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
am__test_StdDistr_SOURCES_DIST = test_StdDistr.c
@HAVE_MATHEMATICA_TRUE@am_test_StdDistr_OBJECTS =  \
@HAVE_MATHEMATICA_TRUE@	test_StdDistr.$(OBJEXT)
test_StdDistr_OBJECTS = $(am_test_StdDistr_OBJECTS)
test_StdDistr_LDADD = $(LDADD)
am__test_functionparser_SOURCES_DIST = test_functionparser.c
@HAVE_MATHEMATICA_TRUE@am_test_functionparser_OBJECTS =  \
@HAVE_MATHEMATICA_TRUE@	test_functionparser.$(OBJEXT)
test_functionparser_OBJECTS = $(am_test_functionparser_OBJECTS)
test_functionparser_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autoconf/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libtestroutines_la_SOURCES) t_arou.c t_ars.c t_auto.c \
	t_cext.c t_cstd.c t_dari.c t_dau.c t_deprecated_tdrgw.c \
	t_deprecated_vmt.c t_dext.c t_dgt.c t_distr.c t_distr_cemp.c \
	t_distr_condi.c t_distr_cont.c t_distr_corder.c t_distr_cvec.c \
	t_distr_cvemp.c t_distr_cxtrans.c t_distr_discr.c \
	t_distr_matr.c t_dsrou.c t_dss.c t_dstd.c t_empk.c t_empl.c \
	t_gibbs.c t_hinv.c t_hist.c t_hitro.c t_hrb.c t_hrd.c t_hri.c \
	t_info.c t_itdr.c t_mcorr.c t_mixt.c t_mvstd.c t_mvtdr.c \
	t_ninv.c t_norta.c t_nrou.c t_pinv.c t_srou.c t_ssr.c \
	t_stringparser.c t_tabl.c t_tdr.c t_tdr_gw.c t_tdr_ia.c \
	t_tdr_ps.c t_unif.c t_unur_error.c t_unur_tests.c t_urng.c \
	t_utdr.c t_util_matrix.c t_vempk.c t_vnrou.c t_x_gen.c \
	$(test_StdDistr_SOURCES) $(test_functionparser_SOURCES)
DIST_SOURCES = $(libtestroutines_la_SOURCES) t_arou.c t_ars.c t_auto.c \
	t_cext.c t_cstd.c t_dari.c t_dau.c t_deprecated_tdrgw.c \
	t_deprecated_vmt.c t_dext.c t_dgt.c t_distr.c t_distr_cemp.c \
	t_distr_condi.c t_distr_cont.c t_distr_corder.c t_distr_cvec.c \
	t_distr_cvemp.c t_distr_cxtrans.c t_distr_discr.c \
	t_distr_matr.c t_dsrou.c t_dss.c t_dstd.c t_empk.c t_empl.c \
	t_gibbs.c t_hinv.c t_hist.c t_hitro.c t_hrb.c t_hrd.c t_hri.c \
	t_info.c t_itdr.c t_mcorr.c t_mixt.c t_mvstd.c t_mvtdr.c \
	t_ninv.c t_norta.c t_nrou.c t_pinv.c t_srou.c t_ssr.c \
	t_stringparser.c t_tabl.c t_tdr.c t_tdr_gw.c t_tdr_ia.c \
	t_tdr_ps.c t_unif.c t_unur_error.c t_unur_tests.c t_urng.c \
	t_utdr.c t_util_matrix.c t_vempk.c t_vnrou.c t_x_gen.c \
	$(am__test_StdDistr_SOURCES_DIST) \
	$(am__test_functionparser_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CFLAGS = @AM_CFLAGS@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
HAVE_IEEE_COMPARISONS = @HAVE_IEEE_COMPARISONS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
UNURAN_LT_VERSION = @UNURAN_LT_VERSION@
UNURAN_SUPPORTS_GSL = @UNURAN_SUPPORTS_GSL@
UNURAN_SUPPORTS_PRNG = @UNURAN_SUPPORTS_PRNG@
UNURAN_SUPPORTS_RNGSTREAM = @UNURAN_SUPPORTS_RNGSTREAM@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
have_valgrind = @have_valgrind@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
SUBDIRS = testdistributions .
AM_CPPFLAGS = \
 $(UNURAN_SUPPORTS_GSL) \
 $(UNURAN_SUPPORTS_PRNG) \
 $(UNURAN_SUPPORTS_RNGSTREAM) \
 -I$(top_srcdir)/src \
 -I$(top_srcdir)/src/tests

noinst_LTLIBRARIES = libtestroutines.la
libtestroutines_la_SOURCES = testroutines.c testcounter.c
LDADD = \
 libtestroutines.la \
 $(top_builddir)/tests/testdistributions/libtestdistributions.la \
 $(top_builddir)/src/libunuran.la

@HAVE_MATHEMATICA_FALSE@MATHEMATICA_PROGS = 

# Special files for tests with Mathematica(TM)
@HAVE_MATHEMATICA_TRUE@MATHEMATICA_PROGS = test_StdDistr  test_functionparser
@ENABLE_DEPRECATED_FALSE@DEPRECATED_TESTS = 

# Files that contain deprecated routines
@ENABLE_DEPRECATED_TRUE@DEPRECATED_TESTS = t_deprecated_vmt t_deprecated_tdrgw
TESTS = $(check_PROGRAMS)

# These tests fail until we fix some bugs
#XFAIL_TESTS = 
noinst_HEADERS = \
 testunuran.h

EXTRA_DIST = \
 test_StdDistr.m \
 test_functionparser.m \
 make_test_files.pl \
 README.conf \
 t_info.conf \
 t_stringparser.conf \
 t_x_gen.conf \
 t_unur_tests.conf \
 t_unur_error.conf \
 t_urng.conf \
 t_util_matrix.conf \
 t_distr.conf \
 t_distr_cemp.conf \
 t_distr_cont.conf \
 t_distr_corder.conf \
 t_distr_cvec.conf \
 t_distr_condi.conf \
 t_distr_cvemp.conf \
 t_distr_cxtrans.conf \
 t_distr_discr.conf \
 t_distr_matr.conf \
 t_auto.conf \
 t_arou.conf \
 t_ars.conf \
 t_cext.conf \
 t_cstd.conf \
 t_dari.conf \
 t_dau.conf \
 t_dext.conf \
 t_dgt.conf \
 t_dsrou.conf \
 t_dss.conf \
 t_dstd.conf \
 t_empk.conf \
 t_empl.conf \
 t_gibbs.conf \
 t_hinv.conf \
 t_hinv.conf \
 t_hist.conf \
 t_hrb.conf \
 t_hrd.conf \
 t_hri.conf \
 t_itdr.conf \
 t_mcorr.conf \
 t_mvstd.conf \
 t_ninv.conf \
 t_norta.conf \
 t_nrou.conf \
 t_pinv \
 t_srou.conf \
 t_ssr.conf \
 t_tabl.conf \
 t_tdr.conf t_tdr_gw.conf t_tdr_ps.conf t_tdr_ia.conf \
 t_unif.conf \
 t_utdr.conf \
 t_vempk.conf \
 t_vnrou.conf \
\
 t_deprecated_vmt.conf


# Compare results of CDF, PDF, and dPDF of standard distributions
# and results of function parser to those produced with 
# Mathematica(TM) ...
@HAVE_MATHEMATICA_TRUE@test_StdDistr_SOURCES = test_StdDistr.c
@HAVE_MATHEMATICA_TRUE@test_StdDistr_DEPENDENCIES = t_StdDistr.data
@HAVE_MATHEMATICA_TRUE@test_functionparser_SOURCES = test_functionparser.c
@HAVE_MATHEMATICA_TRUE@test_functionparser_DEPENDENCIES = t_functionparser.data

# Generate C sources for tests
SUFFIXES = .c

# clean log files and backup files
CLEANFILES = \
 *.log \
 valgrind-* \
 unuran-valgrind-* \
 *~


# clean generated files
DISTCLEANFILES = \
 rm -f t_*.data


# clean generated files
MAINTAINERCLEANFILES = \
 rm -f t_*.c \
 Makefile.in

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .conf .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libtestroutines.la: $(libtestroutines_la_OBJECTS) $(libtestroutines_la_DEPENDENCIES) 
	$(LINK)  $(libtestroutines_la_OBJECTS) $(libtestroutines_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
t_arou$(EXEEXT): $(t_arou_OBJECTS) $(t_arou_DEPENDENCIES) 
	@rm -f t_arou$(EXEEXT)
	$(LINK) $(t_arou_OBJECTS) $(t_arou_LDADD) $(LIBS)
t_ars$(EXEEXT): $(t_ars_OBJECTS) $(t_ars_DEPENDENCIES) 
	@rm -f t_ars$(EXEEXT)
	$(LINK) $(t_ars_OBJECTS) $(t_ars_LDADD) $(LIBS)
t_auto$(EXEEXT): $(t_auto_OBJECTS) $(t_auto_DEPENDENCIES) 
	@rm -f t_auto$(EXEEXT)
	$(LINK) $(t_auto_OBJECTS) $(t_auto_LDADD) $(LIBS)
t_cext$(EXEEXT): $(t_cext_OBJECTS) $(t_cext_DEPENDENCIES) 
	@rm -f t_cext$(EXEEXT)
	$(LINK) $(t_cext_OBJECTS) $(t_cext_LDADD) $(LIBS)
t_cstd$(EXEEXT): $(t_cstd_OBJECTS) $(t_cstd_DEPENDENCIES) 
	@rm -f t_cstd$(EXEEXT)
	$(LINK) $(t_cstd_OBJECTS) $(t_cstd_LDADD) $(LIBS)
t_dari$(EXEEXT): $(t_dari_OBJECTS) $(t_dari_DEPENDENCIES) 
	@rm -f t_dari$(EXEEXT)
	$(LINK) $(t_dari_OBJECTS) $(t_dari_LDADD) $(LIBS)
t_dau$(EXEEXT): $(t_dau_OBJECTS) $(t_dau_DEPENDENCIES) 
	@rm -f t_dau$(EXEEXT)
	$(LINK) $(t_dau_OBJECTS) $(t_dau_LDADD) $(LIBS)
t_deprecated_tdrgw$(EXEEXT): $(t_deprecated_tdrgw_OBJECTS) $(t_deprecated_tdrgw_DEPENDENCIES) 
	@rm -f t_deprecated_tdrgw$(EXEEXT)
	$(LINK) $(t_deprecated_tdrgw_OBJECTS) $(t_deprecated_tdrgw_LDADD) $(LIBS)
t_deprecated_vmt$(EXEEXT): $(t_deprecated_vmt_OBJECTS) $(t_deprecated_vmt_DEPENDENCIES) 
	@rm -f t_deprecated_vmt$(EXEEXT)
	$(LINK) $(t_deprecated_vmt_OBJECTS) $(t_deprecated_vmt_LDADD) $(LIBS)
t_dext$(EXEEXT): $(t_dext_OBJECTS) $(t_dext_DEPENDENCIES) 
	@rm -f t_dext$(EXEEXT)
	$(LINK) $(t_dext_OBJECTS) $(t_dext_LDADD) $(LIBS)
t_dgt$(EXEEXT): $(t_dgt_OBJECTS) $(t_dgt_DEPENDENCIES) 
	@rm -f t_dgt$(EXEEXT)
	$(LINK) $(t_dgt_OBJECTS) $(t_dgt_LDADD) $(LIBS)
t_distr$(EXEEXT): $(t_distr_OBJECTS) $(t_distr_DEPENDENCIES) 
	@rm -f t_distr$(EXEEXT)
	$(LINK) $(t_distr_OBJECTS) $(t_distr_LDADD) $(LIBS)
t_distr_cemp$(EXEEXT): $(t_distr_cemp_OBJECTS) $(t_distr_cemp_DEPENDENCIES) 
	@rm -f t_distr_cemp$(EXEEXT)
	$(LINK) $(t_distr_cemp_OBJECTS) $(t_distr_cemp_LDADD) $(LIBS)
t_distr_condi$(EXEEXT): $(t_distr_condi_OBJECTS) $(t_distr_condi_DEPENDENCIES) 
	@rm -f t_distr_condi$(EXEEXT)
	$(LINK) $(t_distr_condi_OBJECTS) $(t_distr_condi_LDADD) $(LIBS)
t_distr_cont$(EXEEXT): $(t_distr_cont_OBJECTS) $(t_distr_cont_DEPENDENCIES) 
	@rm -f t_distr_cont$(EXEEXT)
	$(LINK) $(t_distr_cont_OBJECTS) $(t_distr_cont_LDADD) $(LIBS)
t_distr_corder$(EXEEXT): $(t_distr_corder_OBJECTS) $(t_distr_corder_DEPENDENCIES) 
	@rm -f t_distr_corder$(EXEEXT)
	$(LINK) $(t_distr_corder_OBJECTS) $(t_distr_corder_LDADD) $(LIBS)
t_distr_cvec$(EXEEXT): $(t_distr_cvec_OBJECTS) $(t_distr_cvec_DEPENDENCIES) 
	@rm -f t_distr_cvec$(EXEEXT)
	$(LINK) $(t_distr_cvec_OBJECTS) $(t_distr_cvec_LDADD) $(LIBS)
t_distr_cvemp$(EXEEXT): $(t_distr_cvemp_OBJECTS) $(t_distr_cvemp_DEPENDENCIES) 
	@rm -f t_distr_cvemp$(EXEEXT)
	$(LINK) $(t_distr_cvemp_OBJECTS) $(t_distr_cvemp_LDADD) $(LIBS)
t_distr_cxtrans$(EXEEXT): $(t_distr_cxtrans_OBJECTS) $(t_distr_cxtrans_DEPENDENCIES) 
	@rm -f t_distr_cxtrans$(EXEEXT)
	$(LINK) $(t_distr_cxtrans_OBJECTS) $(t_distr_cxtrans_LDADD) $(LIBS)
t_distr_discr$(EXEEXT): $(t_distr_discr_OBJECTS) $(t_distr_discr_DEPENDENCIES) 
	@rm -f t_distr_discr$(EXEEXT)
	$(LINK) $(t_distr_discr_OBJECTS) $(t_distr_discr_LDADD) $(LIBS)
t_distr_matr$(EXEEXT): $(t_distr_matr_OBJECTS) $(t_distr_matr_DEPENDENCIES) 
	@rm -f t_distr_matr$(EXEEXT)
	$(LINK) $(t_distr_matr_OBJECTS) $(t_distr_matr_LDADD) $(LIBS)
t_dsrou$(EXEEXT): $(t_dsrou_OBJECTS) $(t_dsrou_DEPENDENCIES) 
	@rm -f t_dsrou$(EXEEXT)
	$(LINK) $(t_dsrou_OBJECTS) $(t_dsrou_LDADD) $(LIBS)
t_dss$(EXEEXT): $(t_dss_OBJECTS) $(t_dss_DEPENDENCIES) 
	@rm -f t_dss$(EXEEXT)
	$(LINK) $(t_dss_OBJECTS) $(t_dss_LDADD) $(LIBS)
t_dstd$(EXEEXT): $(t_dstd_OBJECTS) $(t_dstd_DEPENDENCIES) 
	@rm -f t_dstd$(EXEEXT)
	$(LINK) $(t_dstd_OBJECTS) $(t_dstd_LDADD) $(LIBS)
t_empk$(EXEEXT): $(t_empk_OBJECTS) $(t_empk_DEPENDENCIES) 
	@rm -f t_empk$(EXEEXT)
	$(LINK) $(t_empk_OBJECTS) $(t_empk_LDADD) $(LIBS)
t_empl$(EXEEXT): $(t_empl_OBJECTS) $(t_empl_DEPENDENCIES) 
	@rm -f t_empl$(EXEEXT)
	$(LINK) $(t_empl_OBJECTS) $(t_empl_LDADD) $(LIBS)
t_gibbs$(EXEEXT): $(t_gibbs_OBJECTS) $(t_gibbs_DEPENDENCIES) 
	@rm -f t_gibbs$(EXEEXT)
	$(LINK) $(t_gibbs_OBJECTS) $(t_gibbs_LDADD) $(LIBS)
t_hinv$(EXEEXT): $(t_hinv_OBJECTS) $(t_hinv_DEPENDENCIES) 
	@rm -f t_hinv$(EXEEXT)
	$(LINK) $(t_hinv_OBJECTS) $(t_hinv_LDADD) $(LIBS)
t_hist$(EXEEXT): $(t_hist_OBJECTS) $(t_hist_DEPENDENCIES) 
	@rm -f t_hist$(EXEEXT)
	$(LINK) $(t_hist_OBJECTS) $(t_hist_LDADD) $(LIBS)
t_hitro$(EXEEXT): $(t_hitro_OBJECTS) $(t_hitro_DEPENDENCIES) 
	@rm -f t_hitro$(EXEEXT)
	$(LINK) $(t_hitro_OBJECTS) $(t_hitro_LDADD) $(LIBS)
t_hrb$(EXEEXT): $(t_hrb_OBJECTS) $(t_hrb_DEPENDENCIES) 
	@rm -f t_hrb$(EXEEXT)
	$(LINK) $(t_hrb_OBJECTS) $(t_hrb_LDADD) $(LIBS)
t_hrd$(EXEEXT): $(t_hrd_OBJECTS) $(t_hrd_DEPENDENCIES) 
	@rm -f t_hrd$(EXEEXT)
	$(LINK) $(t_hrd_OBJECTS) $(t_hrd_LDADD) $(LIBS)
t_hri$(EXEEXT): $(t_hri_OBJECTS) $(t_hri_DEPENDENCIES) 
	@rm -f t_hri$(EXEEXT)
	$(LINK) $(t_hri_OBJECTS) $(t_hri_LDADD) $(LIBS)
t_info$(EXEEXT): $(t_info_OBJECTS) $(t_info_DEPENDENCIES) 
	@rm -f t_info$(EXEEXT)
	$(LINK) $(t_info_OBJECTS) $(t_info_LDADD) $(LIBS)
t_itdr$(EXEEXT): $(t_itdr_OBJECTS) $(t_itdr_DEPENDENCIES) 
	@rm -f t_itdr$(EXEEXT)
	$(LINK) $(t_itdr_OBJECTS) $(t_itdr_LDADD) $(LIBS)
t_mcorr$(EXEEXT): $(t_mcorr_OBJECTS) $(t_mcorr_DEPENDENCIES) 
	@rm -f t_mcorr$(EXEEXT)
	$(LINK) $(t_mcorr_OBJECTS) $(t_mcorr_LDADD) $(LIBS)
t_mixt$(EXEEXT): $(t_mixt_OBJECTS) $(t_mixt_DEPENDENCIES) 
	@rm -f t_mixt$(EXEEXT)
	$(LINK) $(t_mixt_OBJECTS) $(t_mixt_LDADD) $(LIBS)
t_mvstd$(EXEEXT): $(t_mvstd_OBJECTS) $(t_mvstd_DEPENDENCIES) 
	@rm -f t_mvstd$(EXEEXT)
	$(LINK) $(t_mvstd_OBJECTS) $(t_mvstd_LDADD) $(LIBS)
t_mvtdr$(EXEEXT): $(t_mvtdr_OBJECTS) $(t_mvtdr_DEPENDENCIES) 
	@rm -f t_mvtdr$(EXEEXT)
	$(LINK) $(t_mvtdr_OBJECTS) $(t_mvtdr_LDADD) $(LIBS)
t_ninv$(EXEEXT): $(t_ninv_OBJECTS) $(t_ninv_DEPENDENCIES) 
	@rm -f t_ninv$(EXEEXT)
	$(LINK) $(t_ninv_OBJECTS) $(t_ninv_LDADD) $(LIBS)
t_norta$(EXEEXT): $(t_norta_OBJECTS) $(t_norta_DEPENDENCIES) 
	@rm -f t_norta$(EXEEXT)
	$(LINK) $(t_norta_OBJECTS) $(t_norta_LDADD) $(LIBS)
t_nrou$(EXEEXT): $(t_nrou_OBJECTS) $(t_nrou_DEPENDENCIES) 
	@rm -f t_nrou$(EXEEXT)
	$(LINK) $(t_nrou_OBJECTS) $(t_nrou_LDADD) $(LIBS)
t_pinv$(EXEEXT): $(t_pinv_OBJECTS) $(t_pinv_DEPENDENCIES) 
	@rm -f t_pinv$(EXEEXT)
	$(LINK) $(t_pinv_OBJECTS) $(t_pinv_LDADD) $(LIBS)
t_srou$(EXEEXT): $(t_srou_OBJECTS) $(t_srou_DEPENDENCIES) 
	@rm -f t_srou$(EXEEXT)
	$(LINK) $(t_srou_OBJECTS) $(t_srou_LDADD) $(LIBS)
t_ssr$(EXEEXT): $(t_ssr_OBJECTS) $(t_ssr_DEPENDENCIES) 
	@rm -f t_ssr$(EXEEXT)
	$(LINK) $(t_ssr_OBJECTS) $(t_ssr_LDADD) $(LIBS)
t_stringparser$(EXEEXT): $(t_stringparser_OBJECTS) $(t_stringparser_DEPENDENCIES) 
	@rm -f t_stringparser$(EXEEXT)
	$(LINK) $(t_stringparser_OBJECTS) $(t_stringparser_LDADD) $(LIBS)
t_tabl$(EXEEXT): $(t_tabl_OBJECTS) $(t_tabl_DEPENDENCIES) 
	@rm -f t_tabl$(EXEEXT)
	$(LINK) $(t_tabl_OBJECTS) $(t_tabl_LDADD) $(LIBS)
t_tdr$(EXEEXT): $(t_tdr_OBJECTS) $(t_tdr_DEPENDENCIES) 
	@rm -f t_tdr$(EXEEXT)
	$(LINK) $(t_tdr_OBJECTS) $(t_tdr_LDADD) $(LIBS)
t_tdr_gw$(EXEEXT): $(t_tdr_gw_OBJECTS) $(t_tdr_gw_DEPENDENCIES) 
	@rm -f t_tdr_gw$(EXEEXT)
	$(LINK) $(t_tdr_gw_OBJECTS) $(t_tdr_gw_LDADD) $(LIBS)
t_tdr_ia$(EXEEXT): $(t_tdr_ia_OBJECTS) $(t_tdr_ia_DEPENDENCIES) 
	@rm -f t_tdr_ia$(EXEEXT)
	$(LINK) $(t_tdr_ia_OBJECTS) $(t_tdr_ia_LDADD) $(LIBS)
t_tdr_ps$(EXEEXT): $(t_tdr_ps_OBJECTS) $(t_tdr_ps_DEPENDENCIES) 
	@rm -f t_tdr_ps$(EXEEXT)
	$(LINK) $(t_tdr_ps_OBJECTS) $(t_tdr_ps_LDADD) $(LIBS)
t_unif$(EXEEXT): $(t_unif_OBJECTS) $(t_unif_DEPENDENCIES) 
	@rm -f t_unif$(EXEEXT)
	$(LINK) $(t_unif_OBJECTS) $(t_unif_LDADD) $(LIBS)
t_unur_error$(EXEEXT): $(t_unur_error_OBJECTS) $(t_unur_error_DEPENDENCIES) 
	@rm -f t_unur_error$(EXEEXT)
	$(LINK) $(t_unur_error_OBJECTS) $(t_unur_error_LDADD) $(LIBS)
t_unur_tests$(EXEEXT): $(t_unur_tests_OBJECTS) $(t_unur_tests_DEPENDENCIES) 
	@rm -f t_unur_tests$(EXEEXT)
	$(LINK) $(t_unur_tests_OBJECTS) $(t_unur_tests_LDADD) $(LIBS)
t_urng$(EXEEXT): $(t_urng_OBJECTS) $(t_urng_DEPENDENCIES) 
	@rm -f t_urng$(EXEEXT)
	$(LINK) $(t_urng_OBJECTS) $(t_urng_LDADD) $(LIBS)
t_utdr$(EXEEXT): $(t_utdr_OBJECTS) $(t_utdr_DEPENDENCIES) 
	@rm -f t_utdr$(EXEEXT)
	$(LINK) $(t_utdr_OBJECTS) $(t_utdr_LDADD) $(LIBS)
t_util_matrix$(EXEEXT): $(t_util_matrix_OBJECTS) $(t_util_matrix_DEPENDENCIES) 
	@rm -f t_util_matrix$(EXEEXT)
	$(LINK) $(t_util_matrix_OBJECTS) $(t_util_matrix_LDADD) $(LIBS)
t_vempk$(EXEEXT): $(t_vempk_OBJECTS) $(t_vempk_DEPENDENCIES) 
	@rm -f t_vempk$(EXEEXT)
	$(LINK) $(t_vempk_OBJECTS) $(t_vempk_LDADD) $(LIBS)
t_vnrou$(EXEEXT): $(t_vnrou_OBJECTS) $(t_vnrou_DEPENDENCIES) 
	@rm -f t_vnrou$(EXEEXT)
	$(LINK) $(t_vnrou_OBJECTS) $(t_vnrou_LDADD) $(LIBS)
t_x_gen$(EXEEXT): $(t_x_gen_OBJECTS) $(t_x_gen_DEPENDENCIES) 
	@rm -f t_x_gen$(EXEEXT)
	$(LINK) $(t_x_gen_OBJECTS) $(t_x_gen_LDADD) $(LIBS)
test_StdDistr$(EXEEXT): $(test_StdDistr_OBJECTS) $(test_StdDistr_DEPENDENCIES) 
	@rm -f test_StdDistr$(EXEEXT)
	$(LINK) $(test_StdDistr_OBJECTS) $(test_StdDistr_LDADD) $(LIBS)
test_functionparser$(EXEEXT): $(test_functionparser_OBJECTS) $(test_functionparser_DEPENDENCIES) 
	@rm -f test_functionparser$(EXEEXT)
	$(LINK) $(test_functionparser_OBJECTS) $(test_functionparser_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_arou.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_ars.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_auto.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_cext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_cstd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_dari.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_dau.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_deprecated_tdrgw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_deprecated_vmt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_dext.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_dgt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_distr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_distr_cemp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_distr_condi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_distr_cont.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_distr_corder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_distr_cvec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_distr_cvemp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_distr_cxtrans.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_distr_discr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_distr_matr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_dsrou.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_dss.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_dstd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_empk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_empl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_gibbs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_hinv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_hist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_hitro.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_hrb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_hrd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_hri.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_info.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_itdr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_mcorr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_mixt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_mvstd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_mvtdr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_ninv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_norta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_nrou.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_pinv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_srou.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_ssr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_stringparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_tabl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_tdr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_tdr_gw.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_tdr_ia.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_tdr_ps.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_unif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_unur_error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_unur_tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_urng.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_utdr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_util_matrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_vempk.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_vnrou.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/t_x_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_StdDistr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_functionparser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testcounter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testroutines.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) check-am \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am


@HAVE_MATHEMATICA_TRUE@test_StdDistr.o: t_StdDistr.data

@HAVE_MATHEMATICA_TRUE@t_StdDistr.data: test_StdDistr.m
@HAVE_MATHEMATICA_TRUE@	math -initfile $(top_srcdir)/tests/test_StdDistr.m

@HAVE_MATHEMATICA_TRUE@test_functionparser.o: t_functionparser.data

@HAVE_MATHEMATICA_TRUE@t_functionparser.data: test_functionparser.m
@HAVE_MATHEMATICA_TRUE@	math -initfile $(top_srcdir)/tests/test_functionparser.m
.conf.c: make_test_files.pl
	./make_test_files.pl $(top_srcdir) $< > $@

t_*.c: make_test_files.pl

# run tests with valgrind
@HAVE_VALGRIND_TRUE@valgrind: $(check_PROGRAMS)
@HAVE_VALGRIND_TRUE@	@list='$(check_PROGRAMS)'; for p in $$list; do \
@HAVE_VALGRIND_TRUE@		$(top_srcdir)/scripts/run_valgrind.sh ./$$p; \
@HAVE_VALGRIND_TRUE@	done

# run tests in fullcheck mode
fullcheck:
	UNURANFULLCHECK=true make check

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
